<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 3.4.2">

    <issue
        id="MissingPermission"
        severity="Error"
        message="Missing permissions required by CameraManager.openCamera: android.permission.CAMERA"
        category="Correctness"
        priority="9"
        summary="Missing Permissions"
        explanation="This check scans through your code and libraries and looks at the APIs being used, and checks this against the set of permissions required to access those APIs. If the code using those APIs is called at runtime, then the program will crash.&#xA;&#xA;Furthermore, for permissions that are revocable (with targetSdkVersion 23), client code must also be prepared to handle the calls throwing an exception if the user rejects the request for permission at runtime."
        errorLine1="                manager.openCamera(mCameraID, mStateCallback, mBackgroundHandler);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/Camera2Renderer.java"
            line="129"
            column="17"/>
    </issue>

    <issue
        id="MissingPermission"
        severity="Error"
        message="Missing permissions required by CameraManager.openCamera: android.permission.CAMERA"
        category="Correctness"
        priority="9"
        summary="Missing Permissions"
        explanation="This check scans through your code and libraries and looks at the APIs being used, and checks this against the set of permissions required to access those APIs. If the code using those APIs is called at runtime, then the program will crash.&#xA;&#xA;Furthermore, for permissions that are revocable (with targetSdkVersion 23), client code must also be prepared to handle the calls throwing an exception if the user rejects the request for permission at runtime."
        errorLine1="                manager.openCamera(mCameraID, mStateCallback, mBackgroundHandler);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCamera2View.java"
            line="114"
            column="17"/>
    </issue>

    <issue
        id="MissingPermission"
        severity="Error"
        message="Missing permissions required by CameraManager.openCamera: android.permission.CAMERA"
        category="Correctness"
        priority="9"
        summary="Missing Permissions"
        explanation="This check scans through your code and libraries and looks at the APIs being used, and checks this against the set of permissions required to access those APIs. If the code using those APIs is called at runtime, then the program will crash.&#xA;&#xA;Furthermore, for permissions that are revocable (with targetSdkVersion 23), client code must also be prepared to handle the calls throwing an exception if the user rejects the request for permission at runtime."
        errorLine1="                    manager.openCamera(mCameraID, mStateCallback, mBackgroundHandler);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCamera2View.java"
            line="119"
            column="21"/>
    </issue>

    <issue
        id="Assert"
        severity="Warning"
        message="Assertions are unreliable in Dalvik and unimplemented in ART. Use `BuildConfig.DEBUG` conditional checks instead."
        category="Correctness"
        priority="6"
        summary="Assertions"
        explanation="Assertions are not checked at runtime. There are ways to request that they be used by Dalvik (`adb shell setprop debug.assert 1`), but note that this is not implemented in ART (the newer runtime), and even in Dalvik the property is ignored in many places and can not be relied upon. Instead, perform conditional checking inside `if (BuildConfig.DEBUG) { }` blocks. That constant is a static final boolean which is true in debug builds and false in release builds, and the Java compiler completely removes all code inside the if-body from the app.&#xA;&#xA;For example, you can replace `assert speed > 0` with `if (BuildConfig.DEBUG &amp;&amp; !(speed > 0)) { throw new AssertionError() }`.&#xA;&#xA;(Note: This lint check does not flag assertions purely asserting nullness or non-nullness; these are typically more intended for tools usage than runtime checks.)"
        url="https://code.google.com/p/android/issues/detail?id=65183"
        urls="https://code.google.com/p/android/issues/detail?id=65183"
        errorLine1="                    assert (planes.length == 3);"
        errorLine2="                    ~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCamera2View.java"
            line="183"
            column="21"/>
    </issue>

    <issue
        id="Assert"
        severity="Warning"
        message="Assertions are unreliable in Dalvik and unimplemented in ART. Use `BuildConfig.DEBUG` conditional checks instead."
        category="Correctness"
        priority="6"
        summary="Assertions"
        explanation="Assertions are not checked at runtime. There are ways to request that they be used by Dalvik (`adb shell setprop debug.assert 1`), but note that this is not implemented in ART (the newer runtime), and even in Dalvik the property is ignored in many places and can not be relied upon. Instead, perform conditional checking inside `if (BuildConfig.DEBUG) { }` blocks. That constant is a static final boolean which is true in debug builds and false in release builds, and the Java compiler completely removes all code inside the if-body from the app.&#xA;&#xA;For example, you can replace `assert speed > 0` with `if (BuildConfig.DEBUG &amp;&amp; !(speed > 0)) { throw new AssertionError() }`.&#xA;&#xA;(Note: This lint check does not flag assertions purely asserting nullness or non-nullness; these are typically more intended for tools usage than runtime checks.)"
        url="https://code.google.com/p/android/issues/detail?id=65183"
        urls="https://code.google.com/p/android/issues/detail?id=65183"
        errorLine1="                    assert (image.getFormat() == mPreviewFormat);"
        errorLine2="                    ~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCamera2View.java"
            line="184"
            column="21"/>
    </issue>

    <issue
        id="Assert"
        severity="Warning"
        message="Assertions are unreliable in Dalvik and unimplemented in ART. Use `BuildConfig.DEBUG` conditional checks instead."
        category="Correctness"
        priority="6"
        summary="Assertions"
        explanation="Assertions are not checked at runtime. There are ways to request that they be used by Dalvik (`adb shell setprop debug.assert 1`), but note that this is not implemented in ART (the newer runtime), and even in Dalvik the property is ignored in many places and can not be relied upon. Instead, perform conditional checking inside `if (BuildConfig.DEBUG) { }` blocks. That constant is a static final boolean which is true in debug builds and false in release builds, and the Java compiler completely removes all code inside the if-body from the app.&#xA;&#xA;For example, you can replace `assert speed > 0` with `if (BuildConfig.DEBUG &amp;&amp; !(speed > 0)) { throw new AssertionError() }`.&#xA;&#xA;(Note: This lint check does not flag assertions purely asserting nullness or non-nullness; these are typically more intended for tools usage than runtime checks.)"
        url="https://code.google.com/p/android/issues/detail?id=65183"
        urls="https://code.google.com/p/android/issues/detail?id=65183"
        errorLine1="            assert(!(frameSize.width == 0 || frameSize.height == 0));"
        errorLine2="            ~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCamera2View.java"
            line="281"
            column="13"/>
    </issue>

    <issue
        id="Assert"
        severity="Warning"
        message="Assertions are unreliable in Dalvik and unimplemented in ART. Use `BuildConfig.DEBUG` conditional checks instead."
        category="Correctness"
        priority="6"
        summary="Assertions"
        explanation="Assertions are not checked at runtime. There are ways to request that they be used by Dalvik (`adb shell setprop debug.assert 1`), but note that this is not implemented in ART (the newer runtime), and even in Dalvik the property is ignored in many places and can not be relied upon. Instead, perform conditional checking inside `if (BuildConfig.DEBUG) { }` blocks. That constant is a static final boolean which is true in debug builds and false in release builds, and the Java compiler completely removes all code inside the if-body from the app.&#xA;&#xA;For example, you can replace `assert speed > 0` with `if (BuildConfig.DEBUG &amp;&amp; !(speed > 0)) { throw new AssertionError() }`.&#xA;&#xA;(Note: This lint check does not flag assertions purely asserting nullness or non-nullness; these are typically more intended for tools usage than runtime checks.)"
        url="https://code.google.com/p/android/issues/detail?id=65183"
        urls="https://code.google.com/p/android/issues/detail?id=65183"
        errorLine1="                assert(planes[0].getPixelStride() == 1);"
        errorLine2="                ~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCamera2View.java"
            line="349"
            column="17"/>
    </issue>

    <issue
        id="Assert"
        severity="Warning"
        message="Assertions are unreliable in Dalvik and unimplemented in ART. Use `BuildConfig.DEBUG` conditional checks instead."
        category="Correctness"
        priority="6"
        summary="Assertions"
        explanation="Assertions are not checked at runtime. There are ways to request that they be used by Dalvik (`adb shell setprop debug.assert 1`), but note that this is not implemented in ART (the newer runtime), and even in Dalvik the property is ignored in many places and can not be relied upon. Instead, perform conditional checking inside `if (BuildConfig.DEBUG) { }` blocks. That constant is a static final boolean which is true in debug builds and false in release builds, and the Java compiler completely removes all code inside the if-body from the app.&#xA;&#xA;For example, you can replace `assert speed > 0` with `if (BuildConfig.DEBUG &amp;&amp; !(speed > 0)) { throw new AssertionError() }`.&#xA;&#xA;(Note: This lint check does not flag assertions purely asserting nullness or non-nullness; these are typically more intended for tools usage than runtime checks.)"
        url="https://code.google.com/p/android/issues/detail?id=65183"
        urls="https://code.google.com/p/android/issues/detail?id=65183"
        errorLine1="                assert(planes[2].getPixelStride() == 2);"
        errorLine2="                ~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCamera2View.java"
            line="350"
            column="17"/>
    </issue>

    <issue
        id="Assert"
        severity="Warning"
        message="Assertions are unreliable in Dalvik and unimplemented in ART. Use `BuildConfig.DEBUG` conditional checks instead."
        category="Correctness"
        priority="6"
        summary="Assertions"
        explanation="Assertions are not checked at runtime. There are ways to request that they be used by Dalvik (`adb shell setprop debug.assert 1`), but note that this is not implemented in ART (the newer runtime), and even in Dalvik the property is ignored in many places and can not be relied upon. Instead, perform conditional checking inside `if (BuildConfig.DEBUG) { }` blocks. That constant is a static final boolean which is true in debug builds and false in release builds, and the Java compiler completely removes all code inside the if-body from the app.&#xA;&#xA;For example, you can replace `assert speed > 0` with `if (BuildConfig.DEBUG &amp;&amp; !(speed > 0)) { throw new AssertionError() }`.&#xA;&#xA;(Note: This lint check does not flag assertions purely asserting nullness or non-nullness; these are typically more intended for tools usage than runtime checks.)"
        url="https://code.google.com/p/android/issues/detail?id=65183"
        urls="https://code.google.com/p/android/issues/detail?id=65183"
        errorLine1="                    assert(addr_diff == 1);"
        errorLine2="                    ~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCamera2View.java"
            line="359"
            column="21"/>
    </issue>

    <issue
        id="Assert"
        severity="Warning"
        message="Assertions are unreliable in Dalvik and unimplemented in ART. Use `BuildConfig.DEBUG` conditional checks instead."
        category="Correctness"
        priority="6"
        summary="Assertions"
        explanation="Assertions are not checked at runtime. There are ways to request that they be used by Dalvik (`adb shell setprop debug.assert 1`), but note that this is not implemented in ART (the newer runtime), and even in Dalvik the property is ignored in many places and can not be relied upon. Instead, perform conditional checking inside `if (BuildConfig.DEBUG) { }` blocks. That constant is a static final boolean which is true in debug builds and false in release builds, and the Java compiler completely removes all code inside the if-body from the app.&#xA;&#xA;For example, you can replace `assert speed > 0` with `if (BuildConfig.DEBUG &amp;&amp; !(speed > 0)) { throw new AssertionError() }`.&#xA;&#xA;(Note: This lint check does not flag assertions purely asserting nullness or non-nullness; these are typically more intended for tools usage than runtime checks.)"
        url="https://code.google.com/p/android/issues/detail?id=65183"
        urls="https://code.google.com/p/android/issues/detail?id=65183"
        errorLine1="                    assert(addr_diff == -1);"
        errorLine2="                    ~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCamera2View.java"
            line="362"
            column="21"/>
    </issue>

    <issue
        id="OldTargetApi"
        severity="Warning"
        message="Not targeting the latest versions of Android; compatibility modes apply. Consider testing and updating this version. Consult the android.os.Build.VERSION_CODES javadoc for details."
        category="Correctness"
        priority="6"
        summary="Target SDK attribute is not targeting latest version"
        explanation="When your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.&#xA;&#xA;To fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: http://developer.android.com/reference/android/os/Build.VERSION_CODES.html as well as follow this guide:&#xA;https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        url="https://developer.android.com/distribute/best-practices/develop/target-sdk.html"
        urls="https://developer.android.com/distribute/best-practices/develop/target-sdk.html,http://developer.android.com/reference/android/os/Build.VERSION_CODES.html"
        errorLine1="        targetSdkVersion 26"
        errorLine2="        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/build.gradle"
            line="101"
            column="9"/>
    </issue>

    <issue
        id="UnsafeDynamicallyLoadedCode"
        severity="Warning"
        message="Dynamically loading code using `load` is risky, please use `loadLibrary` instead when possible"
        category="Security"
        priority="4"
        summary="`load` used to dynamically load code"
        explanation="Dynamically loading code from locations other than the application&apos;s library directory or the Android platform&apos;s built-in library directories is dangerous, as there is an increased risk that the code could have been tampered with. Applications should use `loadLibrary` when possible, which provides increased assurance that libraries are loaded from one of these safer locations. Application developers should use the features of their development environment to place application native libraries into the lib directory of their compiled APKs."
        errorLine1="            System.load(AbsPath);"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/AsyncServiceHelper.java"
            line="347"
            column="13"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 21"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if(mCamera == null &amp;&amp; Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/CameraRenderer.java"
            line="49"
            column="35"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 21"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/CameraRenderer.java"
            line="63"
            column="17"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 21"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if(mCamera == null &amp;&amp; Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCameraView.java"
            line="84"
            column="39"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 21"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCameraView.java"
            line="98"
            column="21"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 21"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.ICE_CREAM_SANDWICH &amp;&amp; !android.os.Build.MODEL.equals(&quot;GT-I9100&quot;))"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCameraView.java"
            line="167"
            column="25"/>
    </issue>

    <issue
        id="ObsoleteSdkInt"
        severity="Warning"
        message="Unnecessary; SDK_INT is always >= 21"
        category="Performance"
        priority="6"
        summary="Obsolete SDK_INT Version Check"
        explanation="This check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.&#xA;&#xA;Similarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder."
        errorLine1="                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="/Users/marco/Documents/GitProjects/Android/PERSONAL/picturearandroid/OpenCV/sdk/java/src/org/opencv/android/JavaCameraView.java"
            line="208"
            column="25"/>
    </issue>

</issues>
